                                            $Date: 1996/05/09 10:04:58 $

This is a list over things that we plan to implement in libwww-perl5.
The order of items does not reflect priority.


  o  Add more HTTP/1.1 features as they stabilize
       Transfer-Encoding: chunked
       Connection: Keep-Alive
       Wait 5 sec before sending content in requests
       Content-Range
       Multipart mime types
       Use HTTP/1.1 in the request line when we support it all.

  o  Support PICS??

  o  HTTP-NG :-(

  o  Make multiple simultaneous requests work.  Make the callback
     request interface event driven.  This will require a major
     restructuring of the protocol modules.  They will all have to be
     rewritten as state machines and all control passed to a
     event-loop with file callbacks.  Don't expect to see this real
     soon.

  o  Provide initial credentials so that we don't always have to get a
     RC_UNAUTHORIZED response first.  Both for Basic and Digest
     authentication.

  o  Allow information callback from protocol modules so that the UI can
     inform the user of what is going on.  A good start is to pass the $ua
     reference on to the protocol->request().

  o  Cache previous ftp connections.  "Keep-Alive"?

  o  Support MOVE, DELETE method for ftp.

  o  Support If-Modified-Since for ftp.

  o  Make file://non-localhost invoke the ftp.pm module.

  o  Use Mail::Send to implement LWP::Protocol::mailto.  Today we just
     invoke sendmail directly, which is not very portable.

  o  Investigate the Net::SSL module and implement support for https.

  o  Make the HTML parser more correct: for instance <tag attr="val>ue">
     and things like that.

  o  $h->as_HTML has trouble with this: <input name="name">

  o  Make the HTML parser much faster.  Perhaps we need to reimplement it
     as C code.

  o  Make traverse kind of callbacks during parsing (this should allow
     us to do formatting as data arrives).

  o  The HTML::Parse module should make meta information (<HEAD>) easier to
     access.  The interface should allow us to stop parsing as soon as the
     <HEAD> section is done.

  o  Parse full HTML 3.0 markup.

  o  Make the $html->as_HTML() output look nicely formatted.

  o  Formatters should support tables.  The postscript formatter should
     inline images.

  o  The lwp-request -o processing should check for Content-Encoding as
     well as Content-Type.

  o  The lwp-request script should optionally consult Mail::Cap for
     handling of media types.

  o  The lwp-request script should use the callback interface so that it
     prints data as it is received.

  o  The lwp-mirror script should be able to work recursively.

  o  Make handcoded autoloading work on systems where the directory
     separator is not "/".

  o  Include more useful programs

  o  More documentation

  o  More tests

  o  Finally, fix bugs, if there are any...
